{"version":3,"sources":["redux/reducer.js","redux/actions.js","redux/store.js","redux/preloadedState.js","components/InfoBlocks.js","data/questionData.js","components/Question.js","helpers/keyMaker.js","components/SelectableOptions.js","components/TextInputOptions.js","components/InfoModal.js","screens/QuestionScreen.js","screens/DocPreviewScreen.js","screens/TitleScreen.js","App.js","index.js"],"names":["reducer","combineReducers","doc","state","arguments","length","undefined","action","type","payload","concat","Object","toConsumableArray","path","objectSpread","currentQuestion","next","targetKey","nextAppend","savedInputs","store","createStore","applyMiddleware","thunk","styles","h1Title","h2Title","h3Title","quotedText","color","image","maxWidth","InfoBlocks","2.1","react_default","a","createElement","style","src","alt","2.2","2.2.1","2.3.1","2.4","custom3.4.2","textInput","select","questionData","welkom","title","inputType","additionalInfo","text","options","start","end","startWoning","stateRef","3.1","append","achtergrond","3.2","3.2.1","planNaam","woningAantal","3.2.2","3.3","3.3.1","3.4","3.4.1","currentYear","Date","getFullYear","x","y","z","3.4.2","kwalitatieveOnderbouwing","3.5","3.5.1","plaatsNaam","vigerendPlan","3.5.2","beschikbaarheidsReden","Question","handleSubmit","event","keyCode","preventDefault","_this","props","navigate","renderCorrectOptionType","SelectableOptions_SelectableOptions","key","setNextKey","setNextAppend","TextInputOptions_TextInputOptions","setSavedInputs","document","addEventListener","this","nextProps","nextState","flexBox","questionTitle","InfoModal_InfoModal","optionsBox","buttonRow","nextTargetKey","nextButtonReady","nextButtonWaiting","onClick","React","Component","connect","questions","update","dispatch","getState","backgroundColor","borderRadius","boxShadow","padding","paddingLeft","paddingRight","margin","minWidth","flexBasis","flexGrow","flexDirection","alignSelf","marginTop","fontSize","display","justifyContent","border","cursor","keyMaker","count","SelectableOptions","map","option","id","selected","handleSelect","selectedId","range","createRange","selectNode","getElementById","window","getSelection","removeAllRanges","addRange","execCommand","setState","prevState","_this2","Fragment","highlight","marginBottom","TextInputOptions","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getInputHandler","defineProperty","target","value","container","inputArea","placeholder","onChange","flexWrap","minHeight","outline","resize","overflow","lineHeight","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","InfoModal","getOpenModalHandler","showModal","getCloseModalHandler","forEach","item","lib_default","overlay","modalContainer","content","modal","targeKey","isOpen","onRequestClose","backButton","fontStyle","components_Question","DocPreviewScreen","placeHolder","par","PureComponent","TitleScreen","textBox","href","cleanLink","textDecoration","paddingTop","paddingBottom","width","fontWeight","borderBottom","borderLeft","App","es","backgroundImage","subContainer","QuestionScreen_default","screens_DocPreviewScreen","height","alignItems","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.47814da5.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\n\r\nimport { APPEND_DOC, NAVIGATE_TO_QUESTION, SET_NEXT_KEY, SET_NEXT_APPEND, CLEAR_NEXT, SET_SAVED_INPUTS } from './actions';\r\n\r\n//doc is the submitted doc\r\nconst docReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case APPEND_DOC:\r\n            if (action.payload) return [...state, action.payload];\r\n            else return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//next preloads the next option, but doesn't navigate there yet.\r\n//should contain targetKey, optionally the toAppend text\r\nconst nextReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_NEXT_KEY:\r\n            return {...state, targetKey: action.payload};\r\n        case SET_NEXT_APPEND:\r\n            return {...state, nextAppend: action.payload};\r\n        case CLEAR_NEXT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//the question(key) that's currently in focus\r\nconst pathReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case NAVIGATE_TO_QUESTION:\r\n            return {...state, currentQuestion: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n//saves all the inputs done by the user, used to fill in templates\r\nconst savedInputsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SET_SAVED_INPUTS:\r\n            return {...state, ...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n    doc: docReducer,\r\n    path: pathReducer,\r\n    next: nextReducer,\r\n    savedInputs: savedInputsReducer,\r\n});\r\n\r\nexport default reducer;","//action types\r\nexport const APPEND_DOC = 'APPEND_DOC';\r\nexport const NAVIGATE_TO_QUESTION = 'NAVIGATE_TO_QUESTION';\r\nexport const SET_NEXT_KEY = 'SET_NEXT_KEY';\r\nexport const SET_NEXT_APPEND = 'SET_NEXT_APPEND';\r\nexport const SET_SAVED_INPUTS = 'SET_SAVED_INPUTS';\r\nexport const CLEAR_NEXT = 'CLEAR_NEXT';\r\n\r\n//action creators\r\nexport const appendDoc = update => ({\r\n    type: APPEND_DOC,\r\n    payload: update,\r\n});\r\nexport const navigateForward = update => ({\r\n    type: NAVIGATE_TO_QUESTION,\r\n    payload: update,\r\n});\r\nexport const setNextKey = update => ({\r\n    type: SET_NEXT_KEY,\r\n    payload: update,\r\n});\r\nexport const setNextAppend = update => ({\r\n    type: SET_NEXT_APPEND,\r\n    payload: update,\r\n});\r\nexport const setSavedInputs = update => ({\r\n    type: SET_SAVED_INPUTS,\r\n    payload: update,\r\n})\r\n\r\n//action creators that get acces to getState via thunk middleware\r\nexport const navigate = () => (dispatch, getState) => {\r\n        //have to thunk it so it has access to the other slices in store. \r\n        let state = {...getState()}; \r\n        //make new object, if not then actions could work off updated states which we don't want\r\n        if (!state.next.targetKey) return;\r\n        dispatch({type: NAVIGATE_TO_QUESTION, payload: state.next.targetKey});\r\n        dispatch({type: APPEND_DOC, payload: state.next.nextAppend});\r\n        dispatch({type: CLEAR_NEXT});\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport preloadedState from './preloadedState'\r\nimport reducer from './reducer';\r\n\r\nexport const store = createStore(reducer, preloadedState, applyMiddleware(thunk));","export default {\r\n    path: {\r\n        currentQuestion: 'welkom',\r\n    },\r\n    savedInputs: {},\r\n}","import React from 'react';\n\nconst styles = {\n    h1Title: {\n        //todo\n    },\n    h2Title: {\n        //todo\n    },\n    h3Title: {\n        //todo\n    },\n    quotedText: {\n        color: '#8cd9fe',\n    },\n    image: {\n        maxWidth: '100%',\n    }\n}\n\n//methods should return JSX objects\n\n//images should be a ref to the public image files, so the clientside doesnt have to download all images at once\n\n//keys match targetKey in questions file. Based on paragraphnumbers in sourcefile. \n\nexport default {\n    '2.1': () => {\n        return(\n            <div>\n                <h1 style={styles.h1Title}>Nieuwe stedelijke ontwikkeling (NSO)</h1>\n                <p>\n                    Is sprake van een nieuwe stedelijke ontwikkeling (NSO), dan is een \n                    plan Ladderplichtig. Een stedelijke ontwikkeling wordt in artikel \n                    1.1.1 Bro gedefinieerd als een: \n                </p>\n                <p style={styles.quotedText}>\n                    ‘Ruimtelijke ontwikkeling van een bedrijventerrein of zeehaventerrein, \n                    of van kantoren, detailhandel, woningbouwlocaties of andere stedelijke \n                    voorzieningen’.\n                </p>\n                <p>\n                    In het Bro is geen ondergrens voor de minimale omvang vastgesteld. Dit \n                    verschilt bovendien per functie. Jurisprudentie geeft vaak meer duidelijkheid. \n                    In de tabel hierna geven we per functie de gangbare ondergrens aan, en \n                    verwijzingen daarbij naar relevante jurisprudentie. Ligt een plan boven de \n                    betreffende ondergrens? Dan kwalificeert het zich in beginsel als stedelijke \n                    ontwikkeling in de zin van artikel 3.1.6. lid 2 Bro. \n                </p>\n                <img src={'/images/21Tabel1.PNG'} alt={''} style={styles.image}/>\n                <p>\n                    De Ladder is van toepassing op een nieuwe stedelijke ontwikkeling. Daarvan \n                    is sprake als het nieuwe bestemmingsplan meer bebouwing mogelijk maakt, of \n                    een functiewijziging van zodanige aard en omvang is, dat daarom sprake is \n                    van een nieuwe stedelijke ontwikkeling. In de praktijk blijkt dit snel het geval. \n                    Ook moeten plannen dan voldoen aan de regionale afspraken.\n                </p>\n            </div>\n        )\n    },\n    '2.2': () => {\n        return(\n            <div>\n                <h1 style={styles.h1Title}>Ruimtelijke verzorgingsgebieden</h1>\n                <p>\n                    De Ladder vraagt om vraag en aanbod binnen het ruimtelijk verzorgingsgebied van de \n                    functie tegen elkaar af te wegen. Dit verzorgingsgebied varieert per type functie en \n                    de aard en omvang van die functie. In de tabel hierna geven we het verzorgingsgebied per \n                    functie beknopt weer. Dat doen we op basis van inhoudelijke graadmeters. Het bepalen \n                    van de afbakening van de regio is in beginsel aan de gemeente zelf. Waar dat aan de \n                    orde is, geven we ook weer in hoeverre relevante beleidsafspraken voor een inkadering \n                    van het verzorgingsgebied zorgen. Dit is het schaalniveau waarop u afspraken maakt en \n                    voor afstemming zorgt. \n                </p>\n                <img src={'/images/22Tabel2.PNG'} alt={''} style={styles.image}/>\n            </div>\n        )\n    },\n    '2.2.1': () => {\n        return(\n            <div>\n                <h1 style={styles.h1Title}>\n                    Verzorgingsgebied woningbouw: subregio’s Zaanstreek-Waterland en Amsterdam\n                </h1>\n                <img src={'/images/221Afbeelding0.PNG'} alt={''} style={styles.image}/>\n                <p>\n                    De aard en omvang van een plan, maar zeker ook de ligging bepalen in hoeverre omliggende gemeenten/subregio’s tot het verzorgingsgebied horen. Bij grootstedelijke plannen met een omvangrijk, complementair programma en gunstige ligging ten opzichte van Amsterdam (denk aan Hembrug en Achtersluispolder), zijn de grensoverschrijdende effecten bijvoorbeeld sterker dan bij kleinschalige inbreidingsplannetjes met een doorsnee programma. \n                </p>\n                <p>\n                    Allereerst zijn verhuisbewegingen een graadmeter bij afbakening van het verzorgingsgebied. Het ruimtelijk verzorgingsgebied voor woningbouw bestaat in onze ogen primair uit de gemeente Zaanstad, en secundair ook de subregio’s Zaanstreek-Waterland en Amsterdam1. Het volgende is daarbij van belang:\n                    <ul>\n                    <li>\n                        CBS-migratiegegevens van alle verhuisde personen van 2011 tot 2017 tonen dat het grootste deel van de verhuisbewegingen (circa 62%) binnengemeentelijk plaatsvindt. Kijken we naar de regio Zaanstreek-Waterland, dan komt circa 67% van de inkomende verhuisbewegingen uit de regio. Als we de grotere regio (Zaanstreek-Waterland en Amsterdam) in beschouwing nemen, dan vond 82% van de verhuisbewegingen binnen dat gebied plaats. Overige verhuisrelaties zijn relatief beperkt en verspreid over een groot aantal gemeenten binnen en buiten de provincie. \n                    </li>\n                    <li>\n                        Van de kopers van nieuwbouwkoopwoningen komt het overgrote deel (circa 80%) in de periode 2005-2015 uit de gemeente Zaanstad zelf. Daarnaast zijn er met overige gemeenten binnen de regio beperkte verhuisrelaties op de nieuwbouwkoopmarkt. In de grotere regio Zaanstreek-Waterland en Amsterdam vond 85% van de inkomende verhuizingen binnen de regio plaats. De nieuwbouw koopmarkt is daarmee wat meer lokaal georiënteerd dan de algehele woningmarkt in de regio. \n                    </li>\n                    </ul>\n                </p>\n                <img src={'/images/221Tabel3.PNG'} alt={''} style={styles.image}/>\n                <p>\n                    Daarnaast vindt op bestuurlijk vlak, regionale afstemming van woningbouwprogrammering en plannen plaats. Deze regionale afstemming in de vorm van het regionale actieprogramma wonen (RAP) en de regionale woningbouwprogrammering, zijn onder andere geënt op de Ladder voor duurzame verstedelijking. De regionale afspraken worden geborgd in de provinciale verordening (PRV). Vanuit het (RAP) en de regionale woningbouwprogrammering in de voormalige Stadsregio Amsterdam (waaronder de regio’s Amsterdam, Amstelland-Meerlanden, en Zaanstad-Waterland vallen) is door de regiogemeenten afgesproken dat de volgende ‘marktregio’s’ ten aanzien van regionale afstemming worden gehanteerd: \n                </p>\n                <img src={'/images/221Afbeelding1.PNG'} alt={''} style={styles.image}/>\n            </div>\n        )\n    },\n    '2.3.1': () => {\n        return(\n            <div>\n                <h1 style={styles.h1Title}>\n                    Behoefte wonen\n                </h1>\n                <p>\n                    Voor de behoeftebepaling bij de functie wonen brengen we hierna achtereenvolgens het woningbouwaanbod in (harde) bestemmingsplannen en de kwantitatieve en kwalitatieve aspecten van de woningvraag in uw verzorgingsgebied in beeld. Dit zijn de subregio’s Zaanstreek-Waterland en Amsterdam. \n                </p>\n                <h2 style={styles.h2Title}>\n                    Kwantitatieve behoefte wonen\n                </h2>\n                <h3 style={styles.h3Title}>\n                    Kwantitatief aanbod: harde plancapaciteit van circa 50.230 woningen\n                </h3>\n                <p>\n                    De Metropoolregio Amsterdam heeft sinds 2017 een monitoringssysteem voor de plancapaciteit voor woningbouw (hierna: Monitor plancapaciteit MRA). Deze monitor is onderlegger voor woningbouwafspraken in de MRA en afstemming binnen en tussen subregio’s. In de subregio’s Amstelland-Meerlanden, Amsterdam en Zaanstreek-Waterland, is mede op basis van deze monitor plancapaciteit het Regionaal ActieProgramma Wonen 2016 t/m 2020 (RAP) opgesteld (2017) (noot 7). \n                </p>\n                <p>\n                    Uit de Monitor plancapaciteit MRA (2017) blijkt in het gehele verzorgingsgebied Zaanstreek-Waterland en Amsterdam harde plancapaciteit voor netto ongeveer 50.200 woningen (peildatum: juli 2017). Het overgrote deel ligt in Amsterdam: circa 44.200 woningen. In subregio Zaanstreek-Waterland gaat het om circa 6.000 woningen. Daarnaast zien we zachte (noot 8) plannen voor in totaal ruim 92.400 woningen in de gehele marktregio, waarvan ongeveer 86.000 woningen op inbreidingslocaties binnen bestaand stedelijk gebied (BSG). Een groot deel hiervan ligt opnieuw in Amsterdam. \n                </p>\n                <img src={'/images/231Tabel7.PNG'} alt={''} style={styles.image}/>\n                <h3 style={styles.h3Title}>\n                    Kwantitatieve vraag: circa 58.050 woningen \n                </h3>\n                <p>\n                    De provincie Noord-Holland heeft in 2017 een prognose opgesteld voor de verwachte ontwikkeling van de bevolking, huishoudens en woningbehoefte in de Noord-Hollandse gemeenten. In de provinciale ruimtelijke verordening en de regionale woningbouwafspraken wordt de provinciale prognose (2017) als uitgangspunt voor de vraagontwikkeling gehanteerd. Deze prognose zien we daarom als richtinggevend voor het bepalen van de woningvraag. \n                </p>\n                <p>\n                    Onderstaande tabel toont de ontwikkeling van de woningvraag volgens de provinciale woningbehoefteprognose: de komende 10 jaar (2018-2028) is er een uitbreidingsvraag van circa 58.050 woningen in het gehele verzorgingsgebied. Zo’n driekwart daarvan komt voor rekening van Amsterdam. \n                </p>\n                <p>\n                    In 2019 bedraagt de vraag ongeveer 55.770 woningen (2019-2029) volgens de prognose. Weer een jaar later is dit 53.180 woningen. Hieruit valt af te leiden dat de additionele vraag naar de toekomst toe licht afneemt, maar dat er ook op langere termijn huishoudensgroei blijft.\n                </p>\n                <img src={'/images/231Tabel8.PNG'} alt={''} style={styles.image}/>\n                <h3 style={styles.h3Title}>\n                    Kwantitatieve behoefte: circa 7.800 woningen\n                </h3>\n                <p>\n                    Hierna stellen we de kwantitatieve woningbehoefte vast door de uitbreidingsvraag voor de komende tien jaar te confronteren met het harde planaanbod. Beide brachten we hiervoor al in beeld.\n                </p>\n                <p>\n                    Volgens huidige inzichten en beschikbare gegevens constateren we een kwantitatieve woningbehoefte van circa 7.800 woningen voor de periode 2018-2028 in uw verzorgingsgebied (regio Zaanstreek-Waterland en Amsterdam). In Zaanstreek-Waterland is een flinke behoefte, want het harde planaanbod bedraagt nog niet de helft van de additionele vraag voor de jaren 2018-2028.  \n                </p>\n                <img src={'/images/231Tabel9.PNG'} alt={''} style={styles.image}/>\n                <h2 style={styles.h2Title}>\n                    Kwalitatieve behoefte wonen\n                </h2>\n                <p>\n                    De kwalitatieve woningbehoefte is vooral belangrijk als de kwantitatieve behoefte niet overtuigend of zelfs negatief is. De kwalitatieve behoefte kán ook relevant zijn als een plan buiten BSG ligt (zie tekstkader). \n                </p>\n                <img src={'/images/231Afbeelding0.PNG'} alt={''} style={styles.image}/>\n                <h3 style={styles.h3Title}>\n                    Kwalitatief aanbod: veel koopwoningen en appartementen in bruto planaanbod\n                </h3>\n                <p>\n                    De Monitor plancapaciteit MRA geeft een eerste indicatie van de kwalitatieve aspecten van het bruto (harde) planaanbod in de gehele marktregio Zaanstreek-Waterland en Amsterdam (peildatum: juli 2017). \n                </p> \n                <p>\n                    Let wel: het gaat hier nadrukkelijk om indicatieve cijfers, omdat in veel (harde) plannen juridisch niets is vastgelegd qua woningtype, eigendomsvorm of prijsklasse. Daarnaast is niet voor alle plannen bekend wat het beoogde kwalitatieve programma is. Bovendien is de kwalitatieve verdeling van de harde planvoorraad uitsluitend bruto bekend. Niet bekend is namelijk welke woningen kwalitatief gesloopt worden.\n                </p>\n                <p>\n                    Wat vooral opvalt aan onderstaande gegevens over de harde plancapaciteit in het verzorgingsgebied, is dat er met name appartementen in harde plancapaciteit worden voorzien (ruim 35.000 appartementen). Het aandeel grondgebonden woningen is met minder dan 6.400 woningen beperkt. Wel is het aantal grondgebonden woningen in Zaanstreek-Waterland in harde plannen groter dan in Amsterdam. Van een groot aandeel harde plannen is het woningtype echter nog onbekend. Dat geldt ook bij de eigendomsvormen. Daarnaast valt op dat het aantal koopwoningen in harde plannen worden voorzien in de regio (circa 20.700 koopwoningen) bijna even groot is als het totale aantal geplande huurwoningen (23.600).  \n                </p>\n                <img src={'/images/231Tabel10.PNG'} alt={''} style={styles.image}/>\n                <h3 style={styles.h3Title}>\n                    Kwalitatieve vraag: vooral vraag naar koopwoningen en appartementen\n                </h3>\n                <p>\n                    Voor het bepalen de kwalitatieve vraag koppelen we de eerder in beeld gebrachte kwantitatieve uitbreidingsvraag volgens de provinciale prognose aan kwalitatieve woonvoorkeuren. Hiervoor gebruiken we woonwensen van verhuisgeneigden in beide subregio’s, zoals weergegeven in Wonen in de Metropoolregio Amsterdam 2017 (WiMRA 2017). \n                </p> \n                <p>\n                    Omdat woonvoorkeuren niet altijd (kunnen) worden opgevolgd, passen we bewust een bandbreedte toe. Zo komen we tot een kwalitatieve vraag naar eigendomsvorm (huur (sociaal en vrijesector) en koop) en type (grondgebonden, appartement en anders), zie de tabel hierna.\n                </p>\n                <p>\n                    Opvallend is de grote voorkeur voor koopwoningen en appartementen in het totale verzorgingsgebied. De grote voorkeur naar appartementen komt vooral vanuit Amsterdam. Amsterdam legt veel gewicht in de schaal. In Zaanstreek-Waterland is de voorkeur naar grondgebonden juist groter. In zowel Zaanstreek-Waterland als Amsterdam is de vraag naar koopwoningen groter dan naar huurwoningen.  \n                </p>\n                <h3 style={styles.h3Title}>\n                    Kwalitatieve behoefte: nadere inzichten vereist voor gedegen onderbouwing, maar in praktijk meestal niet nodig\n                </h3>\n                <p>\n                    Net als bij de kwantitatieve behoefte volgt de kwalitatieve woningbehoefte normaliter uit een confrontatie van vraag en aanbod. Bij de kwalitatieve behoefte zijn echter ook kwalitatieve (mis)matches in de bestaande voorraad en de harde sloopopgave van belang om vast te kunnen stellen of een plan kwalitatief in een behoefte voorziet. Kortom, hoe is de bestaande woningvoorraad verdeeld naar eigendomsvorm, typologie en (liefst ook) woonmilieu? En in welke segmenten precies wordt gesloopt? Gebruik hiervoor bijvoorbeeld ook inzichten vanuit het recent verschenen rapport ‘Raming woningbehoefte MRA’ (2018): daarin is tevens een vooruitberekening gemaakt van de kwalitatieve woningbehoefte in deelgebieden van de MRA, die ook zeer bruikbaar kan zijn als input voor de onderbouwing van de kwalitatieve behoefte. \n                </p> \n                <p>\n                Gezien de onvolkomenheden bij het bepalen van de kwalitatieve behoefte, adviseren we u de kwalitatieve behoefte alleen te motiveren als er kwantitatief geen sluitend verhaal ligt. Anticipeer in dat geval op onderstaande aandachtspunten. Is er wel voldoende kwantitatieve behoefte? Motiveer dan liever dat u een flexibel, breder programma mogelijk maakt. U heeft hier namelijk alle ruimte voor, blijkt uit jurisprudentie. \n                </p>\n                <img src={'/images/231Tabel11.PNG'} alt={''} style={styles.image}/>\n                <img src={'/images/231Afbeelding1.PNG'} alt={''} style={styles.image}/>\n                <p>\n                    Noot 7: In de RAP-oplegger is voor 2017-2027 de kwantitatieve en kwalitatieve woningbehoefte bepaald. Bestuurlijk is afgesproken dat deze berekening 2 jaar geldig is.<br />\n                    Noot 8: Zolang ‘zacht’ concurreren plannen niet met uw plan qua woningbehoefte (alleen hard planaanbod). Wel kunnen ze, als zij binnen BSG liggen, een reëel alternatief vormen voor beoogde ontwikkelingen buiten BSG.<br />\n                    Noot 9: www.plancapaciteit.nl.<br />\n                </p>\n            </div>\n        )\n    },\n    '2.4': () => {\n        return(\n            <div>\n                <h1 style={styles.h1Title}>\n                    Bestaand stedelijk gebied (BSG)\n                </h1>\n                <img src={'/images/24Afbeelding0.PNG'} alt={''} style={styles.image}/>\n                <p>\n                    Artikel 1.1.1 Bro geeft als definitie voor bestaand stedelijk gebied (BSG):\n                </p>\n                <p style={styles.quotedText}>\n                    ‘Bestaand stedenbouwkundig samenstel van bebouwing ten behoeve van wonen, dienstverlening, bedrijvigheid, detailhandel of horeca, alsmede de daarbij behorende openbare of sociaal culturele voorzieningen, stedelijk groen en infrastructuur.’\n                </p>\n                <p>\n                    Voor ontwikkelingen buiten BSG is in het kader van de Ladder een uitgebreidere motivering vereist. Daarbij moet worden onderbouwd waarom niet binnen het bestaand stedelijk gebied in de behoefte kan worden voorzien. Check daarom altijd of het voorgenomen plan een ontwikkeling binnen of buiten BSG betreft.\n                </p>\n                <img src={'/images/24Afbeelding1.PNG'} alt={''} style={styles.image}/>\n                <p>\n                    Naast de hiervoor genoemde definitie van bestaand stedelijk gebied, blijkt uit jurisprudentie dat ook de geldende bestemming van een plangebied relevant kan zijn. Geldt er bijvoorbeeld een agrarische bestemming die de ontwikkeling ten behoeve van wonen, dienstverlening, bedrijvigheid, detailhandel of horeca uitsluit, dan is veelal geen sprake van BSG1. Zie bijvoorbeeld: ABRvS 29 april 2015, ECLI:NL:RVS:2015:1340. Zie ook de nieuwe Ladderhandreiking van het Rijk: www.infomil.nl  \n                </p>\n                <img src={'/images/24Afbeelding2.PNG'} alt={''} style={styles.image}/>\n            </div>\n        )\n    },    \n    'custom3.4.2': () => {\n        return(\n            <div>\n                <h1 style={styles.h1Title}>\n                    Voorbeeldtekst: Plan X voorziet (ook) in een kwalitatieve woningbehoefte\n                </h1>\n                <p>\n                    Plan [NAAM], met in totaal [AANTAL] woningen, is opgebouwd uit [AANTAL] grondgebonden woningen en [AANTAL] appartementen. Van de [AANTAL] woningen, bevinden zich er [AANTAL] in de sociale huursector. [AANTAL] woningen zijn vrijesectorhuur. Het resterende deel van [AANTAL] woningen is koop.\n                </p>\n                <p>\n                    In het ruimtelijk verzorgingsgebied (Zaanstreek-Waterland & Amsterdam) is sprake van een kwalitatieve additionele behoefte van [AANTAL] grondgebonden woningen, [AANTAL] appartementen, [AANTAL] sociale huurwoningen, [AANTAL] vrijesectorhuurwoningen en [AANTAL] koopwoningen voor de periode [2018-2028 / 2019-2029 / 2020-2030]. Dit blijkt uit een koppeling van de provinciale woningbehoefteprognose met de subregionale woonvoorkeuren. Deze zijn vervolgens geconfronteerd met het harde planaanbod in de betreffende kwalitatieve segmenten.\n                    <ul>\n                    <li>\n                        De additionele woningvraag in het verzorgingsgebied bedraagt [AANTAL] [RELEVANTE TYPOLOGIEËN EN EIGENDOMSVORMEN] woningen.\n                    </li>\n                    <li>\n                        Het harde planaanbod in het verzorgingsgebied bedraagt [Y] [RELEVANTE TYPOLOGIEËN EN EIGENDOMSVORMEN] woningen.\n                    </li>\n                    <li>\n                        De resterende behoefte die hieruit voortvloeit is [Z (X-Y)] [RELEVANTE TYPOLOGIEËN EN EIGENDOMSVORMEN] woningen.\n                    </li>\n                    <li>\n                        Plan [NAAM] telt met [AANTAL] [RELEVANTE TYPOLOGIEËN EN EIGENDOMSVORMEN] woningen minder woningen dan de resterende behoefte, namelijk [Z] [RELEVANTE TYPOLOGIEËN EN EIGENDOMSVORMEN] woningen.\n                    </li>\n                    <li>\n                        Kortom, plan [NAAM] voorziet (ook) in een kwalitatieve behoefte. \n                    </li>\n                    </ul>\n                </p>\n            </div>\n        )\n    },\n}\n","export const textInput = 'textInput';\nexport const select = 'select';\nexport const directAppend = 'directAppend';\n\n/*\n\nThis contains all question data. Uses keys and targetKeys to navigate the correct path. \n\nAdditionalInfo: should contain key of target infoBlock and a line of text that will be clickable\n\nOptions: should contain the targetKey. Forking is possible by giving different targetKeys per option.\n\nAppend: Not all questions have an append. The React.Component should check wether a question or a question and selected option has an append and call the append fn if selected.\n\n*/\n\nexport default {\n    'welkom': {\n        title: 'U komt een document aanmaken, slim!',\n        inputType: select,\n        additionalInfo: [{\n            text: 'We bewandelen een vragenpad en gaandeweg bouwt het document op, makkelijk toch?'\n        }],\n        options: [{\n            text: 'Jazeker, laten we beginnen!',\n            targetKey: 'start',\n        }],\n    },\n    'start': {\n        title: 'Voor welke functie wilt u een onderbouwing maken?',\n        inputType: select,\n        options: [{\n            text: `Functie wonen`, \n            targetKey: '3.1'\n            }]\n    },\n    'end': {\n        title: 'U heeft de vragenlijst doorlopen. Wat wilt u nu doen?',\n        inputType: select,\n        options: [{\n            text: 'Onderbouwing voor een andere functie toevoegen.',\n            targetKey: 'start'\n        }, {\n            text: 'Klik hier om de opgebouwde tekst te kopiëren.',\n            targetKey: 'clickToCopy'\n        }]\n    },\n    'startWoning':{\n        title: 'Informatie over het plan',\n        inputType: textInput,\n        options: [{\n            text: 'Naam van het bestemmingsplan/de omgevingsvergunning: ',\n            stateRef: 'planNaam'\n        }, {\n            text: 'Plaatsnaam: ',\n            stateRef: 'plaatsNaam'\n        }, {\n            text: 'Naam van het vigerende bestemmingsplan / vigerende beheersverordening: ',\n            stateRef: 'vigerendPlan'\n        }, {\n            text: 'Aantal woningen dat wordt mogelijk gemaakt: ',\n            stateRef: 'woningAantal'\n        }],\n        targetKey: '3.1',\n    },\n    '3.1': {\n        title: `Achtergrond Plan`,\n        inputType: textInput,\n        options: [{\n            text: `Geef hier een omschrijving van uw plan en woningbouwprogramma. Hoe specifieker u bent, des te gerichter kunt u uw plan doorgaans onderbouwen. Met sterke kwalitatieve argumenten kunt u immers onderbouwen waarom een locatie geschikt is (en waarom eventuele alternatieven binnen BSG dat niet zijn). Denk aan:\n            ligging, en oppervlakte plangebied, ruimtelijke opzet, woningdichtheid, aantal woningen, verdeling naar typologie (appartementen, grondgebonden), oppervlakte-, prijsklassen, soort woonmilieu.`, \n            stateRef: `achtergrond`\n            }], \n        targetKey: '3.2',\n        append: (state) => state.achtergrond\n    },\n    '3.2': {\n        title: `Is het plan een nieuwe stedelijke ontwikkeling? `,\n        additionalInfo: [{\n            text: `Klik hier voor de toelichting van een NSO en de specifieke ondergrens bij woningen. `,\n            targetKey: '2.1',\n        }],\n        inputType: select,\n        options: [{\n            text: `Is op basis daarvan geen sprake van stedelijke ontwikkeling? \n                U bent niet Ladderplichtig. Daarmee hoeft u de verdere stappen niet te \n                doorlopen. Wel blijft een motivering van een goede ruimtelijke ordening \n                vereist en moet de uitvoerbaarheid van een plan hoe dan ook worden \n                onderbouwd volgens artikel 3.1.6 lid 1 Bro. Neem daarom idealiter \n                altijd een motivering volgens de systematiek van de Ladder op in de \n                toelichting van een bestemmingsplan. Geef in dat geval aan dat een \n                Laddertoets niet vereist is, maar dat u dit \n                zorgvuldigheids-/volledigheidshalve toch doet.`,\n            targetKey: '3.2.1',\n        }, {\n           text: `Is er wel sprake van een stedelijke ontwikkeling, maar kan deze niet \n                als ‘nieuw’ worden beschouwd? Ook in dit geval bent u niet Ladderplichtig. \n                Om dezelfde reden als hiervoor genoemd kunt u nut en noodzaak volgens de \n                Laddersystematiek te motiveren. Vermeld ook hier expliciet dat een \n                Laddertoets niet noodzakelijk is.`,\n           targetKey: `3.2.1`, \n        }, {\n            text: `Is uw plan een stedelijke ontwikkeling en bovendien ‘nieuw’? \n            U bent Ladderplichtig en moet dus een Laddertoets voor uw plan doorlopen.`,  \n            targetKey: `3.2.2`,\n        }]\n    },\n    '3.2.1': {\n        inputType: directAppend,\n        targetKey: '3.3',\n        append: (state) => {\n            return (`\n                Plan ${state.planNaam} telt met ${state.woningAantal} woningen minder dan 12 woningen. \n                Daarmee is geen sprake van een nieuwe stedelijke ontwikkeling (NSO) en \n                hoeft plan ${state.planNaam} niet getoetst te worden aan de Ladder voor duurzame \n                verstedelijking.\n                Volledigheidshalve hanteren wij de Laddersystematiek ter motivering van een goede \n                ruimtelijke ordening en onderbouwing van de uitvoerbaarheid van plan ${state.planNaam}. \n                Hierna doorlopen we de bijbehorende stappen.\n            `)\n        }\n    },\n    '3.2.2': {\n        inputType: directAppend,\n        targetKey: '3.3',\n        append: (state) => {\n            return (`\n            Plan ${state.planNaam} telt met ${state.woningAantal} woningen \n            ${state.woningAantal === '12' ? '12' : 'meer dan 12'} woningen. \n            Daarmee is sprake van een nieuwe stedelijke ontwikkeling (NSO) en moet \n            plan ${state.planNaam} getoetst worden aan de Ladder voor duurzame \n            verstedelijking. Hierna doorlopen we de vereiste stappen.\n            `)\n        }\n    },\n    '3.3': {\n        title: `Wat is het ruimtelijk verzorgingsgebied van het plan? `,\n        additionalInfo: [{\n            text: 'Klik hier voor de toelichting van het verzorgingsgebied', \n            targetKey: '2.2'\n        }, {\n            text: 'Klik hier voor de specifieke reikwijdte bij woningen', \n            targetKey: '2.2.1'\n        }, ],\n        inputType: select,\n        options: [{\n            text: `Het ruimtelijk verzorgingsgebied voor woningbouw staat niet ter \n                discussie: dit zijn de subregio’s Zaanstreek-Waterland en Amsterdam.`,\n            targetKey: '3.3.1',        \n        }],\n    },\n    '3.3.1': {\n        inputType: directAppend,\n        targetKey: '3.4',\n        append: (state) => {\n            return (`\n            Het ruimtelijk verzorgingsgebied voor plan ${state.planNaam} zijn de subregio’s \n            Zaanstreek-Waterland en Amsterdam. Dit is het gebiedsniveau waarop we de \n            kwantatieve en/of kwalitatieve behoefte bepalen. Als plan ${state.planNaam} buiten \n            BSG ligt, vindt op dit schaalniveau ook de afweging van alternatieven binnen \n            BSG plaats.\n            `)\n        }\n    },\n    '3.4': {\n        title: 'Voorziet het plan in een behoefte?',\n        inputType: select,\n        additionalInfo: [{\n            text: 'Klik hier voor de toelichting van de woningbouwbehoefte.',\n            targetKey: '2.3.1',\n        }],\n        options: [{\n                text: `Voorziet het plan in een kwantitatieve en/of kwalitatieve \n                    behoefte?`,\n                targetKey: '3.4.1',\n            }, {\n                text: `Voorziet het plan alleen in een kwalitatieve behoefte en \n                    geen kwantitatieve?`,\n                targetKey: '3.4.2',\n            }, {\n                text: `Voorziet het plan niet in een kwalitatieve of kwantitatieve \n                    behoefte? Dan moet het plan geschrapt worden of het programma \n                    worden aangepast.`,\n            }\n        ]\n    },\n    '3.4.1': {\n        title: `Voorziet het plan in een kwantitatieve woningbehoefte?`,\n        inputType: textInput,\n        additionalInfo: [{\n            text: 'Klik hier voor de toelichting van de woningbouwbehoefte.',\n            targetKey: '2.3.1',\n        }],\n        options: [{\n            text: `Hoeveel woningen bedraagt de additionele woningvraag \n                in het verzorgingsgebied?`,\n            stateRef: 'x'\n        }, {\n            text: `Hoeveel woningen bedraagt het harde planaanbod in \n                het verzorgingsgebied?`,\n            stateRef: 'y'\n        }],\n        targetKey: '3.4.2',\n        append: (state) => {\n            const currentYear = new Date().getFullYear();\n            const x = +state.x;\n            const y = +state.y;\n            const z = x - y;\n            \n            return (`\n            Plan ${state.planNaam} voorziet in ${state.woningAantal} woningen. In het ruimtelijk \n            verzorgingsgebied (Zaanstreek-Waterland & Amsterdam) is sprake van een kwantitatieve \n            additionele behoefte van ${z} woningen voor de periode \n            ${currentYear + '-' + (currentYear + 10)}. \n            Dit blijkt uit een confrontatie van de provinciale woningbehoefteprognose met het \n            harde planaanbod.\n            • De additionele woningvraag in het verzorgingsgebied bedraagt ${x} woningen.\n            • Het harde planaanbod in het verzorgingsgebied bedraagt ${y} woningen.\n            • De resterende behoefte die hieruit voortvloeit is ${z} woningen.\n            • Plan ${state.planNaam} telt met ${state.woningAantal} woningen minder woningen dan de resterende behoefte, namelijk ${z} woningen.\n            • Kortom, plan ${state.planNaam} voorziet in een kwantitatieve behoefte.\n            `)\n        }\n    },\n    '3.4.2': {\n        title: 'Voorziet het plan in een kwalitatieve woningbehoefte?',\n        inputType: textInput,\n        additionalInfo: [{\n            text: 'Klik hier voor een voorbeeld',\n            targetKey: 'custom3.4.2',\n        }],\n        options: [{\n            text: `De kwalitatieve onderbouwing is maatwerk. Beschrijf hier de kwalitatieve\n                woningbehoefte en gebruik bovenstaande als voorbeeld.`,\n            stateRef: 'kwalitatieveOnderbouwing'\n        }],\n        targetKey: '3.5',\n        append: (state) => state.kwalitatieveOnderbouwing\n    },\n    '3.5': {\n        title: 'Ligt het plan binnen bestaand stedelijk gebied?',\n        inputType: select,\n        additionalInfo: [{\n            text: `Klik hier voor de definitie van bestaand stedelijk gebied (BSG) en \n                hoe u dit moet lezen.`,\n            targetKey: '2.4',\n        }],\n        options: [{\n            text: `Ligt uw plan binnen BSG? U hoeft dan geen alternatieven binnen BSG\n                af te wegen. Uw plan ligt immers al binnen BSG.`,\n            targetKey: '3.5.1',\n        }, {\n            text: `Ligt uw plan buiten BSG, maar kunt u motiveren dat er binnen BSG \n                geen geschikte en/of beschikbare plekken voorhanden zijn?`,\n            targetKey: '3.5.2'\n        }, {\n            text: `Ligt uw plan buiten BSG en zijn er geschikte en of beschikbare \n                alternatieven binnen BSG voorhanden? Overweeg een dergelijke locatie \n                voor uw plan of – als u dat niet wilt of kunt – pas het plan en programma \n                aan, zodat het alsnog past bij de plek en locatiekeuze buiten BSG legitiem is.`\n        }]\n    },\n    '3.5.1': {\n        inputType: directAppend,\n        targetKey: 'end',\n        append: (state) => {\n            return(`\n            Het plangebied ligt binnen BSG. Het plan ligt binnen het bestaand stedelijk weefsel \n            van ${state.plaatsNaam} en/of het vigerende bestemmingsplan ${state.vigerendPlan} maakt \n            reeds een stedelijke functie mogelijk. Ook op dit aspect voldoet de ontwikkeling dus \n            aan de Ladder. \n            `)\n        }\n    },\n    '3.5.2': {\n        title: 'Plan ligt buiten BSG, maar binnen BSG zijn geen geschikte/beschikbare alternatieven.',\n        inputType: textInput,\n        options: [{\n            text: `Geef een (korte) opsomming van de redenen waarom er geen alternatieve \n                locaties voorhanden zijn. Bijvoorbeeld: technisch, juridisch, qua oppervlakte, \n                qua kosten, qua omgevingskwaliteit.`,\n            stateRef: 'beschikbaarheidsReden'\n        }],\n        targetKey: 'end',\n        append: (state) => {\n            return (`\n            Plan X ligt buiten het bestaand stedelijk weefsel van ${state.plaatsNaam} en/of het \n            vigerende bestemmingsplan ${state.vigerendPlan} maakt nog geen stedelijke functie(s) mogelijk.\n\n            Uit een alternatievenafweging blijken echter geen locaties binnen BSG geschikt en/of beschikbaar \n            (te maken) als alternatief voor de hier beoogde locatie. Er zijn geen alternatieve locaties \n            binnen BSG voorhanden en/of deze zijn ${state.beschikbaarheidsReden} niet redelijkerwijs \n            geschikt te maken als alternatief voor de nu beoogde locatie.  Kortom, bij gebrek aan reële \n            alternatieven binnen BSG is de voorliggende locatie buiten BSG het meest geschikt, en voldoet \n            daarmee aan de Ladder.\n            `)\n        }\n    }\n\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { setNextKey, navigate, setNextAppend, setSavedInputs } from '../redux/actions';\r\nimport { SelectableOptions, TextInputOptions, InfoModal } from './';\r\n\r\n//the object with questionData\r\nimport questions, { directAppend, textInput, select } from '../data/questionData'; \r\n\r\n/*\r\nComponent only gets the questionKey from the store, \r\nthen grabs the correct data from the questionData file. \r\n\r\nMapping props to state will cause it not to render. Use props.\r\n\r\nIt will render and behave differently based on the inputType specified\r\nin the questionData.\r\n*/\r\n\r\nconst mapStateToProps = state => ({\r\n    currentQuestion: state.path.currentQuestion,\r\n    ...questions[state.path.currentQuestion],\r\n    savedInputs: state.savedInputs,\r\n    nextTargetKey: state.next.targetKey,\r\n})\r\n\r\nclass Question extends React.Component {\r\n    componentDidMount() {\r\n        document.addEventListener('keypress', this.handleSubmit);\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.targetKey) { \r\n            //if the question contains a targetKey at top level, then it only has one targetKey and shouldn't contain any in the options. In which case we autoreload it.\r\n            this.props.setNextKey(this.props.targetKey)\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        //checks if the next question in path is a directAppend, in which case it shouldn't be displayed but handled internally\r\n        if (nextProps.inputType === directAppend) {\r\n            this.props.setNextAppend(nextProps.append(nextProps.savedInputs));\r\n            this.props.setNextKey(nextProps.targetKey)\r\n            this.props.navigate();\r\n            return false\r\n        } else return true\r\n    }   \r\n    handleSubmit = (event) => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n            this.props.navigate();\r\n        }\r\n\r\n    } \r\n    renderCorrectOptionType = () => {\r\n        switch (this.props.inputType) {\r\n            case select:\r\n                return (\r\n                    <SelectableOptions \r\n                        key={this.props.currentQuestion} \r\n                        options={this.props.options} \r\n                        setNextKey={this.props.setNextKey}\r\n                        setNextAppend={this.props.setNextAppend}    \r\n                    />\r\n                )\r\n            case textInput:\r\n                return (\r\n                    <TextInputOptions\r\n                        key={this.props.currentQuestion}\r\n                        options={this.props.options}\r\n                        savedInputs={this.props.savedInputs}\r\n                        setSavedInputs={this.props.setSavedInputs}\r\n                        append={this.props.append}\r\n                        setNextKey={this.props.setNextKey}\r\n                        setNextAppend={this.props.setNextAppend}    \r\n                    />\r\n                )\r\n            default:\r\n                    return null\r\n        }\r\n    }\r\n    render() { \r\n        //needs a key or it wont update the component\r\n        return (\r\n            <div style={styles.flexBox}>\r\n                <div>\r\n                    <h1 style={styles.questionTitle}>{this.props.title}</h1>  \r\n                </div>\r\n                    {this.props.additionalInfo ? <InfoModal additionalInfo=\r\n                    {this.props.additionalInfo}/> : null}\r\n                <div style={styles.optionsBox}>                    \r\n                    {this.renderCorrectOptionType()}\r\n                </div>\r\n                <div style={styles.buttonRow}>\r\n                    <button style={this.props.nextTargetKey ? styles.nextButtonReady : styles.nextButtonWaiting} onClick={this.props.navigate}>Verder >></button>\r\n                </div>  \r\n            </div>\r\n    )}\r\n}\r\n\r\nexport default connect(mapStateToProps, {setNextKey, setNextAppend, setSavedInputs, navigate})(Question);\r\n\r\nconst styles = {\r\n    flexBox: {\r\n        backgroundColor: '#f8f9fa',\r\n        borderRadius: 15,\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n        padding: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        margin: '20px',\r\n        minWidth: '400px',\r\n        maxWidth: '800px',\r\n        flexBasis: 'auto',\r\n        flexGrow: 1,\r\n        flexDirection: 'column',\r\n        alignSelf: 'flex-start',\r\n    },\r\n    questionTitle: {\r\n        marginTop: 0,\r\n        fontSize: 34,\r\n    },\r\n    optionsBox: {\r\n        marginTop: 40,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    buttonRow: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    nextButtonWaiting: {\r\n        backgroundColor: 'white',\r\n        border: 'none',\r\n        color: 'gray',\r\n        borderRadius: 15,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        fontSize: 18,\r\n        alignSelf: 'flex-end',\r\n        marginTop: 20,\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    },\r\n    nextButtonReady: {\r\n        backgroundColor: '#638ca6',\r\n        border: 'none',\r\n        color: 'white',\r\n        borderRadius: 15,\r\n        padding: 10,\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        fontSize: 18,\r\n        alignSelf: 'flex-end',\r\n        marginTop: 20,\r\n        cursor: 'pointer',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    }\r\n}\r\n\r\nQuestion.propTypes = {\r\n    currentQuestion: PropTypes.string,\r\n    append: PropTypes.func,\r\n    targetKey: PropTypes.string,\r\n    options: PropTypes.array,\r\n    inputType: PropTypes.string,\r\n    title: PropTypes.string,\r\n    additionalInfo: PropTypes.array,\r\n};","function keyMaker() {\r\n    let count = 0;\r\n    return function() {\r\n        return ++count\r\n    }\r\n};\r\n\r\nexport default keyMaker();","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport keyMaker from '../helpers/keyMaker';\r\n\r\n//only used for questions with inputType: select\r\n\r\nexport default class SelectableOptions extends React.Component {\r\n    state = {\r\n        //adds props.options to state because it needs to add keys and selected: false\r\n        options: this.props.options.map( (option) => {\r\n            return {...option, id: keyMaker(), selected: false}\r\n            }),\r\n    }\r\n    handleSelect = (selectedId, targetKey, append) => {\r\n        if (targetKey === 'clickToCopy') {\r\n            //copy the preview, works for IE, thanks SO\r\n            let range = document.createRange();\r\n            range.selectNode(document.getElementById(\"doc\"));\r\n            window.getSelection().removeAllRanges(); // clear current selection\r\n            window.getSelection().addRange(range); // to select text\r\n            document.execCommand(\"copy\");\r\n            window.getSelection().removeAllRanges();// to deselect\r\n        } else if (targetKey) this.props.setNextKey(targetKey); //preload the selection in store if it's there\r\n        if (append) this.props.setNextAppend(append());\r\n        \r\n        this.setState(prevState => ( //set highlightflag\r\n            {\r\n                options: prevState.options.map( option => {\r\n                    if (option.id === selectedId) {\r\n                        return {...option, id: keyMaker(), selected: true}\r\n                    } \r\n                    else if (option.selected && option.id !== selectedId) { \r\n                        //forces update on old selected\r\n                        return {...option, id: keyMaker(), selected: false}\r\n                    }\r\n                    else return {...option, selected: false}\r\n                    })\r\n            }))\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.options.map( option => (\r\n                    <span \r\n                        key={option.id}\r\n                        style={option.selected ? styles.highlight : styles.option} \r\n                        onClick={() => this.handleSelect(option.id, option.targetKey, option.append)}>\r\n                    {option.text}\r\n                    </span>\r\n                ))}\r\n            </>\r\n    )}\r\n}\r\n\r\nconst styles = {\r\n    highlight: {\r\n        backgroundColor: '#17a697',\r\n        border: 'none',\r\n        color: 'white',\r\n        borderRadius: 15,\r\n        padding: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        fontSize: 18,\r\n        marginBottom: 20,\r\n        alignSelf: 'flex-start',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n        cursor: 'pointer',\r\n    }, \r\n    option: {\r\n        backgroundColor: '#f4f4f4',\r\n        border: 'none',\r\n        borderRadius: 15,\r\n        padding: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        fontSize: 18,\r\n        marginBottom: 20,\r\n        alignSelf: 'flex-start',\r\n        cursor: 'pointer',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    }\r\n};\r\n\r\nSelectableOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    setNextKey: PropTypes.func,\r\n    setNextAppend: PropTypes.func,\r\n    append: PropTypes.func,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//expects a stateRef per option that it uses to save and refernce the input. \r\n\r\nexport default class TextInputOptions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //sets empty string so inputs are controlled\r\n        props.options.map( option => props.setSavedInputs({[option.stateRef]: ''}));\r\n    }\r\n    getInputHandler = key => event => {\r\n        //handles controlled input in redux because it wants to store the values for later. \r\n        let update = {[key]: event.target.value}\r\n        this.props.setSavedInputs(update); //IT WORKS!!\r\n        if (this.props.append) this.props.setNextAppend(this.props.append({...this.props.savedInputs, ...update}));\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.options.map( option => (\r\n                    <div style={styles.container}>\r\n                        <span style={styles.text}>{option.text}</span>\r\n                        <textarea\r\n                            style={styles.inputArea}\r\n                            placeholder='...' \r\n                            value={this.props.savedInputs[option.stateRef]}\r\n                            onChange={this.getInputHandler(option.stateRef)}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        backgroundColor: '#17a697',\r\n        border: 'none',\r\n        color: 'white',\r\n        borderRadius: 15,\r\n        padding: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        fontSize: 18,\r\n        marginBottom: 20,\r\n        alignSelf: 'flex-start',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n    },\r\n    text: {\r\n        marginBottom: 30,\r\n        flexGrow: 1,\r\n    }, \r\n    inputArea: {\r\n        minWidth: 330,\r\n        minHeight: 150,\r\n        flexGrow: 1,\r\n        padding: 10,\r\n        border: 'none',\r\n        borderRadius: 15,\r\n        outline: 'none',\r\n        resize: 'none', //removes resize button\r\n        overflow: 'auto', //removes IE scrollbar\r\n        fontSize: 18,\r\n        lineHeight: 1.6,\r\n        fontFamily: `-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n          \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n          sans-serif`,\r\n        color: '#373c3e',\r\n        WebkitFontSmoothing: 'antialiased',\r\n        MozOsxFontSmoothing: 'grayscale',\r\n    }\r\n}\r\n\r\nTextInputOptions.propTypes = {\r\n    options: PropTypes.array,\r\n    savedInputs: PropTypes.object,\r\n    setNextKey: PropTypes.func,\r\n    setNextAppend: PropTypes.func,\r\n    setSavedInputs: PropTypes.func,\r\n    append: PropTypes.func,\r\n};","import React from 'react';\nimport Modal from 'react-modal';\nimport PropTypes from 'prop-types';\n\nimport { InfoBlocks } from './';\n\nexport default class InfoModal extends React.Component {\n    constructor(props) {\n        super(props);\n        //have to set showModal per item before setting state. Mapping the array produces another Array, but we want an Object\n        let showModal = {}\n        props.additionalInfo.forEach( item => {\n            showModal[item.targetKey] = false\n        })\n        this.state = {\n            showModal,\n        }\n    }\n    getOpenModalHandler = key => () => this.setState({showModal: {[key]: true}})\n    getCloseModalHandler = key => () => this.setState({showModal: {[key]: false}})\n\n    render() {\n        if (!this.props.additionalInfo) return null\n        return(\n            <>\n                {this.props.additionalInfo.map( item => {\n                    if (!item.targetKey) {\n                        return <div style={styles.text}>{item.text}</div>\n                    } else return (\n                    <>\n                        <div style={styles.text}onClick={this.getOpenModalHandler(item.targetKey)}>{item.text}</div>\n                        <Modal\n                            style={{overlay: styles.modalContainer, content: styles.modal}}\n                            key={item.targeKey}\n                            isOpen={this.state.showModal[item.targetKey]}\n                            onRequestClose={this.getCloseModalHandler(item.targetKey)}\n                            >\n                                <button onClick={this.getCloseModalHandler(item.targetKey)} style={styles.backButton}>{'<< '}Terug</button>\n                                {InfoBlocks[item.targetKey]()}\n                        </Modal>\n                    </>\n                )})}\n            </>\n        )\n    }\n}\nconst styles = {\n    modal: {\n        backgroundColor: '#f8f9fa',\n        borderRadius: 15,\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n        padding: 25,\n        paddingLeft: 35,\n        paddingRight: 35,\n        margin: '20px',\n        minWidth: '400px',\n        maxWidth: '800px',\n    },\n    modalContainer: {\n    },\n    text: {\n        fontStyle: 'italic',\n        cursor: 'pointer',\n    }, \n    backButton: {\n        backgroundColor: '#638ca6',\n        border: 'none',\n        color: 'white',\n        borderRadius: 15,\n        padding: 10,\n        paddingLeft: 20,\n        paddingRight: 20,\n        fontSize: 18,\n        alignSelf: 'flex-end',\n        marginTop: 20,\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\n        cursor: 'pointer',\n    }\n}\n\nInfoModal.propTypes = {\n    additionInfo: PropTypes.array,\n}\n\n","import React from 'react';\r\nimport { Question } from '../components';\r\n\r\nexport default class extends React.Component {\r\n    render() {\r\n        return (\r\n            <Question />\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport keyMaker from '../helpers/keyMaker';\r\n\r\nconst mapStateToProps = state => ({\r\n    doc: state.doc,\r\n});\r\n\r\nclass DocPreviewScreen extends React.PureComponent {\r\n  \r\n    placeHolder = () => {\r\n        if (this.props.doc) {\r\n            return this.props.doc.map( par => <p key={keyMaker()}>{par}</p> )\r\n        } else {\r\n            return \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='doc' style={styles.flexBox}>\r\n                <h1 style={styles.title}>Document preview</h1>\r\n                {this.placeHolder()}\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps)(DocPreviewScreen);\r\n\r\nconst styles = {\r\n    title: {\r\n        marginTop: 0,\r\n    },\r\n    flexBox: {\r\n        backgroundColor: 'white',\r\n        boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)',\r\n        borderRadius: 15,\r\n        padding: 25,\r\n        paddingLeft: 35,\r\n        paddingRight: 35,\r\n        margin: '20px',\r\n        minWidth: '400px',\r\n        maxWidth: '800px',\r\n        minHeight: '300px',\r\n        flexBasis: 'auto',\r\n        flexGrow: 1,\r\n        alignSelf: 'flex-start',\r\n    }\r\n}","import React from 'react';\n\nexport default (props) => {\n    return (\n        <div style={styles.flexBox}>\n            <div style={styles.textBox}>\n                <a href='/' style={styles.cleanLink}>\n                    <span>\n                        Doc Builder\n                    </span>\n                </a>\n            </div>\n        </div>\n    )    \n}\n\nconst styles = {\n    flexBox: {\n        flexBasis: 'auto',\n        flexGrow: 1,\n        marginBottom: 15,\n    },\n    cleanLink: {\n        color: 'inherit',\n        textDecoration: 'inherit',\n    },\n    textBox: {\n        margin: '20px',\n        color: 'white',\n        alignSelf: 'flex-start',\n        padding: 10,\n        paddingTop: 15,\n        paddingBottom: 15,\n        borderRadius: 25,\n        width: 450,\n        fontWeight: 'bold',\n        fontSize: 50,\n        borderBottom: '5px #e0e0e0',\n        borderLeft: '5px #e0e0e0',\n    }\n}\n\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { QuestionScreen, DocPreviewScreen, TitleScreen } from './screens';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n          <div style={styles.backgroundImage}>\n          <div style={styles.container}>\n            <div style={styles.subContainer}> \n              <TitleScreen />\n              <div style={{width: '100%'}}></div>\n              <QuestionScreen />\n              <DocPreviewScreen />\n            </div>\n          </div>\n          </div>\n      </Provider>        \n      );\n  }\n}\n\nconst styles = {\n  backgroundImage: {\n\n  },\n  container: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  subContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}