{"version":3,"sources":["index.js"],"names":["Button","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","onClick","name","Display","buffer","map","buf","Calculator","_this","Object","_home_jerry_Projects_React_React_Calc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_jerry_Projects_React_React_Calc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_jerry_Projects_React_React_Calc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","operations","+","b","-","x","/","**","Math","pow","state","buttons","numbers","getNumbers","operators","getOperators","specials","arr","i","push","op","value","tar","includes","calculate","setBuffer","pushBuffer","val","_home_jerry_Projects_React_React_Calc_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","undefined","setState","result","_this2","key","input","React","Component","render","document","getElementById"],"mappings":"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","file":"static/js/main.f94126c5.chunk.js","sourcesContent":["import React from 'react';\nimport {render} from 'react-dom';\n\nconst Button = props => (\n    <button onClick={props.onClick}>{props.name}</button>\n)\n\nconst Display = props => (\n    <h1>{props.buffer.map( (buf) => buf + ' ')}\n    </h1>\n)\n\nclass Calculator extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            buffer: [0]\n        }\n        this.buttons = {\n            numbers: this.getNumbers(),\n            operators: this.getOperators(),\n            specials: ['clear', '=']\n        }\n    }\n\n    getNumbers() {\n        let arr = []\n        for (let i = 0; i < 10; i++) {\n            arr.push(i)\n        }\n        return arr\n    }\n\n    getOperators() {\n        let arr = []\n        for (let op in this.operations) {\n            arr.push(op)\n        }\n        return arr\n    }\n\n    operations = {\n        '+': function(a ,b) { return a + b },\n        '-': function(a, b) { return a - b },\n        'x': function(a, b) { return a * b },\n        '/': function(a, b) { return a / b },\n        '**': function(a, b) { return a ** b }\n    }\n\n    input(value) {\n        let buffer = this.state.buffer\n        let tar = this.buttons.operators.includes(value) ? 1 :\n                  buffer[1] ? 2 :\n                  0\n        if (value === '=') {\n            return this.calculate()\n        }\n        if (value === 'clear') {\n            return this.setBuffer()\n        }\n        if (tar === 1 && buffer[1]) {\n            return\n        }\n        return this.pushBuffer(tar, value)\n    }\n\n    pushBuffer(tar, val) {\n        let arr = [...this.state.buffer]\n        if (arr[tar] === 0 || arr[tar] === undefined) {\n            arr[tar] = val\n        } \n        \n        else {\n            arr[tar] = arr[tar] + '' + val\n        }\n        this.setState({\n            buffer: arr\n        })\n    }\n\n    calculate() {\n        let buffer = this.state.buffer\n        if (!buffer[1]) return\n        if (!buffer[2]) buffer[2] = 0\n        let a = +buffer[0]\n        let b = +buffer[2]\n        let op = buffer[1]\n\n        let result = this.operations[op](a, b)\n\n        this.setBuffer(result)\n    }\n\n    setBuffer(a, op, b) {\n        let arr = a ? [a] : [0]\n        if (op) arr.push( '' + op )\n        if (b) arr.push( '' + b )\n\n        this.setState({\n            buffer: arr\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Display buffer={this.state.buffer} />\n                {this.buttons.numbers.map(val => (\n                        <Button \n                            key={val}\n                            name={val} \n                            onClick={() => this.input(val)}      \n                        />\n                ))}\n                <br/>\n                {this.buttons.operators.map(val => (\n                        <Button \n                            key={val}\n                            name={val} \n                            onClick={() => this.input(val)}    \n                        />\n                ))}\n                <br/>\n                {this.buttons.specials.map(val => (\n                        <Button \n                            key={val}\n                            name={val} \n                            onClick={() => this.input(val)}      \n                        />\n                ))}          \n            </div>\n        )\n    }\n}\n\nrender(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}